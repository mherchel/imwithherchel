//
// Sitewide mixins
//

@mixin clearfix {
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}
@mixin hide-text {
  text-indent: -9999px;
  overflow: hidden;
}
@mixin nowrap {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
@mixin icon($file, $width:15px) {
  position: relative;
  padding-left: 45px;
  @include breakpoint($wide) {
    padding-left: 70px;
  }
  &:before {
    content: "";
    position: absolute;
    left: 15px;
    top: 0;
    height: 20px;
    width: $width;
    background-image: url(../../assets/images/#{$file});
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;
    @include center(y);
    @include breakpoint($wide) {
      left: 25px;
      height: 25px;
      width: $width+5;
    }
  }
}

// Center
// Centers an element with reference to the parent element that is not position: static
//
// Note that for this to work properly, you will need to absolutely position this element before applying this mixin
//
// Params
//   $way: x (for horizontal centering), y (vertical centering), or xy (centered in both ways)
//
@mixin center($way:'xy') {
  @if $way == 'x' {
    left: 50%;
    transform: translateX(-50%);
  } @else if $way == 'y' {
    top: 50%;
    transform: translateY(-50%);
  } @else if $way == 'none' {
    top: auto;
    left: auto;
    transform: translate(0, 0);
  } @else {
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
}

@mixin skew($x,$y) {
  -webkit-transform: skew($x, $y);
     -moz-transform: skew($x, $y);
       -o-transform: skew($x, $y);
      -ms-transform: skew($x, $y);
          transform: skew($x, $y);
}

@mixin background-size($size) {
  -webkit-background-size: $size;
     -moz-background-size: $size;
       -o-background-size: $size;
          background-size: $size;
}
